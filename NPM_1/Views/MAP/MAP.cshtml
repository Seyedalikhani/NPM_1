<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>




<!-- Top panel with filters -->
<div style="background-color: pink; padding: 10px; display: flex; flex-wrap: wrap; align-items: flex-start; gap: 20px; font-size: 14px;">

    <!-- Province -->
    <div>
        <label style="font-size: 16px;">Province:</label><br />
        @Html.DropDownList(
            "Dropdown_province",
            new SelectList(new[] {
                "ALBORZ", "ARDABIL", "BUSHEHR", "CHAHARMAHAL BAKHTIARI", "EAST AZERBAIJAN",
                "ESFAHAN", "FARS", "GILAN", "GOLESTAN", "HAMEDAN", "HORMOZGAN", "ILAM",
                "KERMAN", "KERMANSHAH", "KHORASAN RAZAVI", "KHOUZESTAN", "KOHGILUYEH AND BOYER AHMAD",
                "KORDESTAN", "LORESTAN", "MARKAZI", "MAZANDARAN", "NORTH KHORASAN", "QAZVIN",
                "QOM", "SEMNAN", "SISTAN VA BALUCHESTAN", "SOUTH KHORASAN", "TEHRAN",
                "WEST AZERBAIJAN", "YAZD", "ZANJAN"
            }),
            "Select Province",
            new
            {
                @id = "Dropdown_province",
                @class = "form-control",
                style = "width: 250px; font-size: 13px;" // Set your desired width here
            }
        )



    </div>

    <!-- Site Code -->
    <div>
        <label style="font-size: 16px;">Site:</label><br />
        @Html.DropDownList(
            "siteCodeDropdown",
            new SelectList(ViewBag.SiteList),
            "Select Site",
            new
            {
                @id = "siteCodeDropdown",
                @class = "form-control",
                style = "width: 100px; font-size: 13px;" // Match Province dropdown
            }
        )

    </div>




    <!-- Band Info in 3 Rows -->
    <div>
        <label style="font-size: 16px;">Band:</label><br />
        <div style="font-size: 13px;">
            <!-- Row 1 -->
            <div style="display: flex; gap: 10px; margin-bottom: 5px;">
                <label><input type="checkbox" checked> G900</label>
                <label><input type="checkbox" checked> G1800</label>
            </div>

            <!-- Row 2 -->
            <div style="display: flex; gap: 10px; margin-bottom: 5px;">
                <label><input type="checkbox" checked> U900</label>
                <label><input type="checkbox" checked> U2100</label>
            </div>

            <!-- Row 3 -->
            <div style="display: flex; gap: 10px;">
                <label><input type="checkbox" checked> L1800</label>
                <label><input type="checkbox" checked> L2100</label>
                <label><input type="checkbox" checked> L2600</label>
            </div>
        </div>
    </div>

    <!-- Site Type in 3 Rows -->
    <div>
        <label style="font-size: 16px;">Site Type:</label><br />
        <div style="display: flex; flex-direction: column; font-size: 13px;">
            <label><input type="checkbox" checked> Macro</label>
            <label><input type="checkbox" checked> Micro</label>
            <label><input type="checkbox" checked> Pico</label>
        </div>
    </div>

    <!-- Node Name -->
    <div>
        <label style="font-size: 16px;">Node:</label><br />
        <select id="nodeDropdown" class="form-control" style="font-size: 13px;">
            <option value="">--Select Node--</option>
            <!-- Populate dynamically -->
        </select>
    </div>

    <!-- Tool Buttons -->
    <div style="display: flex; flex-direction: row; gap: 10px; align-items: center;">
        <button class="btn btn-primary" style="font-size: 13px;">Distance</button>
        <button class="btn btn-primary" style="font-size: 13px;">Area</button>
        <button class="btn btn-success" style="font-size: 13px;">Export</button>
    </div>

</div>



<div id="map" style="height: 530px;"></div>



@*<div style="padding: 10px; font-size: 13px;">
    <strong>Legend:</strong><br />
    <span style="color:#e6194b;">■ G900</span>
    <span style="color:#3cb44b;">■ G1800</span>
    <span style="color:#4363d8;">■ U900</span>
    <span style="color:#f58231;">■ U2100</span>
    <span style="color:#911eb4;">■ L1800</span>
    <span style="color:#46f0f0;">■ L2100</span>
    <span style="color:#f032e6;">■ L2600</span>
</div>*@



<script src="~/Scripts/jquery-3.6.0.min.js"></script>
<script src="~/Scripts/jquery.canvasjs.min.js"></script>

<link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>



<script>
    var map = L.map('map').setView([35.7331085205078, 51.4947395324707], 13);

    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        maxZoom: 19,
        attribution: '© OpenStreetMap'
    }).addTo(map);

    let mapMarkers = [];
    let sectorLayersByBand = {
        G900: [], G1800: [], U900: [], U2100: [], L1800: [], L2100: [], L2600: []
    };

    function clearMapMarkers() {
        mapMarkers.forEach(marker => map.removeLayer(marker));
        mapMarkers = [];
    }

    function drawSector(lat, lng, azimuth, radius = 200, angle = 60, label = "", color = "red", band = "") {
        const toRad = deg => deg * Math.PI / 180;
        const points = [];
        const start = azimuth - angle / 2;
        const end = azimuth + angle / 2;
        points.push([lat, lng]);
        for (let a = start; a <= end; a += 5) {
            let rad = toRad(a);
            let dx = lat + (radius / 111320) * Math.cos(rad);
            let dy = lng + (radius / (111320 * Math.cos(toRad(lat)))) * Math.sin(rad);
            points.push([dx, dy]);
        }
        points.push([lat, lng]);

        const sector = L.polygon(points, {
            color: color,
            fillColor: color,
            fillOpacity: 0.4
        }).bindPopup(label + " (" + azimuth + "°)");

        sector.addTo(map);

        if (band && sectorLayersByBand[band]) {
            sectorLayersByBand[band].push(sector);
        }
    }

    $(document).ready(function () {
        $('#Dropdown_province').on('change', function () {
            const province = $(this).val();
            if (!province) return;

            $.ajax({
                url: '@Url.Action("GetLocations", "MAP")',
                type: 'POST',
                data: { selected_province: province },
                success: function (sectors) {
                    map.eachLayer(function (layer) {
                        if (layer instanceof L.Polygon || layer instanceof L.Marker) {
                            map.removeLayer(layer);
                        }
                    });
                    mapMarkers = [];
                    for (let band in sectorLayersByBand) {
                        sectorLayersByBand[band].forEach(layer => map.removeLayer(layer));
                        sectorLayersByBand[band] = [];
                    }

                    let $siteDropdown = $('#siteCodeDropdown');
                    $siteDropdown.empty().append('<option value="">Select Site</option>');

                    const bandStyles = {
                        G900: { radius: 25, angle: 55, color: "#e6194b" },
                        G1800: { radius: 30, angle: 50, color: "#3cb44b" },
                        U900: { radius: 35, angle: 45, color: "#4363d8" },
                        U2100: { radius: 40, angle: 40, color: "#f58231" },
                        L1800: { radius: 45, angle: 35, color: "#911eb4" },
                        L2100: { radius: 50, angle: 30, color: "#46f0f0" },
                        L2600: { radius: 55, angle: 25, color: "#f032e6" },
                    };

                    let bounds = [];
                    let addedLocations = new Set();

                    sectors.forEach(sector => {
                        const style = bandStyles[sector.band];
                        if (!style) return;

                        drawSector(sector.lat, sector.lng, sector.azimuth, style.radius, style.angle, sector.cellName, style.color, sector.band);

                        if (!addedLocations.has(sector.location)) {
                            addedLocations.add(sector.location);
                            $siteDropdown.append(
                                $('<option>', {
                                    value: sector.location,
                                    text: sector.location,
                                    'data-lat': sector.lat,
                                    'data-lng': sector.lng
                                })
                            );
                        }

                        bounds.push([sector.lat, sector.lng]);
                    });

                    if (bounds.length > 0) {
                        map.fitBounds(bounds);
                    }
                },
                error: function (xhr, status, error) {
                    console.error("AJAX error:", status, error);
                }
            });
        });

        $('input[type=checkbox]').on('change', function () {
            const band = $(this).parent().text().trim();
            const isChecked = $(this).is(':checked');
            if (!sectorLayersByBand[band]) return;
            sectorLayersByBand[band].forEach(layer => {
                if (isChecked) {
                    map.addLayer(layer);
                } else {
                    map.removeLayer(layer);
                }
            });
        });
    });

    let siteMarker;
    const redIcon = new L.Icon({
        iconUrl: '/images/red-dot.png',
        iconSize: [60, 60],
        iconAnchor: [30, 60],
        popupAnchor: [0, -60]
    });

    $('#siteCodeDropdown').on('change', function () {
        const selectedOption = $(this).find(':selected');
        const lat = parseFloat(selectedOption.data('lat'));
        const lng = parseFloat(selectedOption.data('lng'));

        if (!lat || !lng) return;

        if (siteMarker) {
            map.removeLayer(siteMarker);
        }

        siteMarker = L.marker([lat, lng], { icon: redIcon }).addTo(map)
            .bindPopup(selectedOption.val())
            .openPopup();

        map.setView([lat, lng], 14);
    });
</script>
