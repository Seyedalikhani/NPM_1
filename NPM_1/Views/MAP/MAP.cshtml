<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>




<!-- Top panel with filters -->
<div style="background-color: pink; padding: 10px; display: flex; flex-wrap: wrap; align-items: flex-start; gap: 20px; font-size: 14px;">

    <!-- Province -->
    <div>
        <label style="font-size: 16px;">Province:</label><br />
        @Html.DropDownList(
            "Dropdown_province",
            new SelectList(new[] {
                "ALBORZ", "ARDABIL", "BUSHEHR", "CHAHARMAHAL BAKHTIARI", "EAST AZERBAIJAN",
                "ESFAHAN", "FARS", "GILAN", "GOLESTAN", "HAMEDAN", "HORMOZGAN", "ILAM",
                "KERMAN", "KERMANSHAH", "KHORASAN RAZAVI", "KHOUZESTAN", "KOHGILUYEH AND BOYER AHMAD",
                "KORDESTAN", "LORESTAN", "MARKAZI", "MAZANDARAN", "NORTH KHORASAN", "QAZVIN",
                "QOM", "SEMNAN", "SISTAN VA BALUCHESTAN", "SOUTH KHORASAN", "TEHRAN",
                "WEST AZERBAIJAN", "YAZD", "ZANJAN"
            }),
            "Select Province",
            new
            {
                @id = "Dropdown_province",
                @class = "form-control",
                style = "width: 250px; font-size: 13px;" // Set your desired width here
            }
        )



    </div>

    <!-- Site Code -->
    <div>
        <label style="font-size: 16px;">Site:</label><br />
        @Html.DropDownList(
            "siteCodeDropdown",
            new SelectList(ViewBag.SiteList),
            "Select Site",
            new
            {
                @id = "siteCodeDropdown",
                @class = "form-control",
                style = "width: 100px; font-size: 13px;" // Match Province dropdown
            }
        )
    </div>




    <!-- Band Info in 3 Rows -->
    <div>
        <label style="font-size: 16px;">Band:</label><br />
        <div style="font-size: 13px;">
            <!-- Row 1 -->
            <div style="display: flex; gap: 10px; margin-bottom: 5px;">
                <label><input type="checkbox" checked> G900</label>
                <label><input type="checkbox" checked> G1800</label>
            </div>

            <!-- Row 2 -->
            <div style="display: flex; gap: 10px; margin-bottom: 5px;">
                <label><input type="checkbox" checked> U900</label>
                <label><input type="checkbox" checked> U2100</label>
            </div>

            <!-- Row 3 -->
            <div style="display: flex; gap: 10px;">
                <label><input type="checkbox" checked> L1800</label>
                <label><input type="checkbox" checked> L2100</label>
                <label><input type="checkbox" checked> L2600</label>
            </div>
        </div>
    </div>

    <!-- Site Type in 3 Rows -->
    <div>
        <label style="font-size: 16px;">Site Type:</label><br />
        <div style="display: flex; flex-direction: column; font-size: 13px;">
            <label><input type="checkbox" checked> Macro</label>
            <label><input type="checkbox" checked> Micro</label>
            <label><input type="checkbox" checked> Pico</label>
        </div>
    </div>

    <!-- Node Name -->
    <div>
        <label style="font-size: 16px;">Node:</label><br />
        <select id="nodeDropdown" class="form-control" style="font-size: 13px;">
            <option value="">--Select Node--</option>
            <!-- Populate dynamically -->
        </select>
    </div>

    <!-- Tool Buttons -->
    <div style="display: flex; flex-direction: row; gap: 10px; align-items: center;">
        <button class="btn btn-primary" style="font-size: 13px;">Distance</button>
        <button class="btn btn-primary" style="font-size: 13px;">Area</button>
        <button class="btn btn-success" style="font-size: 13px;">Export</button>
    </div>

</div>



<div id="map" style="height: 530px;"></div>



<script src="~/Scripts/jquery-3.6.0.min.js"></script>
<script src="~/Scripts/jquery.canvasjs.min.js"></script>

<script>


    var map = L.map('map').setView([35.7331085205078, 51.4947395324707], 13); // Tehran coords as example

    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        maxZoom: 19,
        attribution: '© OpenStreetMap'
    }).addTo(map);



    @*$(document).ready(function () {
        $('#Dropdown_province').on('change', function () {
            var province = $(this).val();
            if (!province) return;

            $.ajax({
                url: '@Url.Action("GetLocations", "MAP")',
                type: 'POST',
                data: { selected_province: province },
                success: function (sites) {
                    console.log("Sites received:", sites);
                    let $siteDropdown = $('#siteCodeDropdown');
                    $siteDropdown.empty();
                    $siteDropdown.append('<option value="">Select Site</option>');

                    $.each(sites, function (index, site) {
                        $siteDropdown.append(
                            '<option value="' + site.name + '" data-lat="' + site.lat + '" data-lng="' + site.lng + '">' + site.name + '</option>'
                        );
                    });
                },
                error: function (xhr, status, error) {
                    console.error("AJAX error:", status, error);
                }
            });
        });
    });*@



    let mapMarkers = []; // Store all site markers

function clearMapMarkers() {
    mapMarkers.forEach(marker => map.removeLayer(marker));
    mapMarkers = [];
}

$(document).ready(function () {
    $('#Dropdown_province').on('change', function () {
        var province = $(this).val();
        if (!province) return;

        $.ajax({
            url: '@Url.Action("GetLocations", "MAP")',
            type: 'POST',
            data: { selected_province: province },
            success: function (sites) {
                console.log("Sites received:", sites);

                // Clear dropdown
                let $siteDropdown = $('#siteCodeDropdown');
                $siteDropdown.empty().append('<option value="">Select Site</option>');

                // Clear previous markers
                clearMapMarkers();

                let bounds = [];

                $.each(sites, function (index, site) {
                    // Add to dropdown
                    $siteDropdown.append(
                        $('<option>', {
                            value: site.name,
                            text: site.name,
                            'data-lat': site.lat,
                            'data-lng': site.lng
                        })
                    );

                    // Add marker to map
                    if (site.lat && site.lng) {
                        let marker = L.marker([site.lat, site.lng]).addTo(map)
                            .bindPopup(site.name);
                        mapMarkers.push(marker);
                        bounds.push([site.lat, site.lng]);
                    }
                });

                // Fit map to bounds if markers exist
                if (bounds.length > 0) {
                    map.fitBounds(bounds);
                }
            },
            error: function (xhr, status, error) {
                console.error("AJAX error:", status, error);
            }
        });
    });
});






    let siteMarker; // Global marker variable

    const redIcon = new L.Icon({
        iconUrl: 'https://maps.google.com/mapfiles/ms/icons/red-dot.png',
        iconSize: [32, 32],
        iconAnchor: [16, 32],
        popupAnchor: [0, -32]
    });



    $('#siteCodeDropdown').on('change', function () {
        const selectedOption = $(this).find(':selected');
        const lat = parseFloat(selectedOption.data('lat'));
        const lng = parseFloat(selectedOption.data('lng'));

        if (!lat || !lng) return;

        // Remove previous red marker
        if (siteMarker) {
            map.removeLayer(siteMarker);
        }

        // Add red marker for selected site
        siteMarker = L.marker([lat, lng], { icon: redIcon }).addTo(map)
            .bindPopup(selectedOption.val())
            .openPopup();

        // Center the map
        map.setView([lat, lng], 14);
    });







</script>

